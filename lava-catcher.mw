include turtle.mw

:: setting_chest_to_buckets retry
 local chest = peripheral.wrap("top")
 if not chest then
  set_sucess(false)
  return
 end
 chest.setFrequency(colors.orange,colors.orange,colors.white)
 set_success(true)
;;
: set_chest_to_buckets { setting_chest_to_buckets } force_success ;
:: setting_chest_to_lava_buckets retry
 local chest = peripheral.wrap("top")
 if not chest then
  set_sucess(false)
  return
 end
 chest.setFrequency(colors.orange,colors.orange,colors.orange)
 set_success(true)
;;
: set_chest_to_lava_buckets { setting_chest_to_lava_buckets } force_success ;

: placing_things # 1 select u placing count_items # 0 = { success } { failure } ifelse ;
: place_things { placing_things } force_success ;
: aquire_bucket has_bucket? { } { get_bucket } ifelse # 3 select ;
: has_bucket? # 3 select item_count # 0 = not ;
: get_bucket set_chest_to_buckets # 3 select # 1 u suck_to_count holding_bucket? not { d drop get_bucket } if ;
: aquire_lava d placing  success? { success } { d moving success? { aquire_lava } { failure } ifelse } ifelse ;
:: holding_lava_bucket? retry
 local third_item = turtle.getItemDetail(3)
 push(third_item and third_item.name == "minecraft:lava_bucket")
;;
:: holding_bucket? retry
 local third_item = turtle.getItemDetail(3)
  push(third_item and third_item.name == "minecraft:bucket")
;;
: give_bucket set_chest_to_lava_buckets u drop ;
: go_to_surface u moving success? { go_to_surface } if ;
: do_thing_with_bucket fine_on_fuel? { give_bucket } { refuel } ifelse ;
:: fine_on_fuel? retry
 push(turtle.getFuelLevel() > 2000)
;;
:: refuel retry
 turtle.refuel()
;;
: pack_things # 1 select u dig ;
: drain_column place_things aquire_bucket aquire_lava success? go_to_surface { do_thing_with_bucket drain_column } { pack_things } ifelse ;

:: patrol_update_counters pure
 local block = pop()
 local x = pop()
 local y = pop()
 push(x)
 push(y-1)
 push(block)
;;
: patrol_body # 1 sub { dup call f move } swap times l turn dup call f move patrol_update_counters patrol ;
: patrol over dup # 0 = not { patrol_body } if ;

include repl.mw
repl