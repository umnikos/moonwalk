include turtle.mw

: is_log? inspect is_log_internal ;
:: is_log_internal retry
	local b = pop()
	if b and b.state and b.state.axis and b.state.axis == "y" then
		push(true)
	else
		push(false)
	end
;;

: chop_up_until_gone f is_log? { f dig } if u detect { u dig u move chop_up_until_gone } if ;
: go_down d moving success? { go_down } if ;
: replant f place ; 

: chop_tree f dig f move chop_up_until_gone go_down replant b move replant ;
:: dump_output retry
	for i=2,16 do
		turtle.select(i)
		turtle.dropDown()
	end
	turtle.select(1)
;;

:: restock retry
	local c = turtle.getItemCount()
	turtle.suckDown(math.max(0,5-c))
;;

:: low_fuel? retry
	push(turtle.getFuelLevel() < 5000)
;;
: set_chest_to_lava # 1 # 1 # 1 f set_echest ;
: set_chest_to_buckets # 1 # 1 # 0 f set_echest ;
:: use_lava retry
	turtle.refuel()
;;
: refuel r turn r turn set_chest_to_lava # 13 select # 1 f suck_to_count use_lava set_chest_to_buckets f drop # 1 select r turn r turn ;

: step f is_log? { chop_tree dump_output restock low_fuel? { refuel } if } { cooldown } ifelse ;

crash
{ step } forever
